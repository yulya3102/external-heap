// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: btree.proto

#ifndef PROTOBUF_btree_2eproto__INCLUDED
#define PROTOBUF_btree_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace btree {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_btree_2eproto();
void protobuf_AssignDesc_btree_2eproto();
void protobuf_ShutdownFile_btree_2eproto();

class KV;
class BLeaf;
class BBuffer;

// ===================================================================

class KV : public ::google::protobuf::Message {
 public:
  KV();
  virtual ~KV();

  KV(const KV& from);

  inline KV& operator=(const KV& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KV& default_instance();

  void Swap(KV* other);

  // implements Message ----------------------------------------------

  KV* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KV& from);
  void MergeFrom(const KV& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);

  // required uint64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:btree.KV)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint64 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_btree_2eproto();
  friend void protobuf_AssignDesc_btree_2eproto();
  friend void protobuf_ShutdownFile_btree_2eproto();

  void InitAsDefaultInstance();
  static KV* default_instance_;
};
// -------------------------------------------------------------------

class BLeaf : public ::google::protobuf::Message {
 public:
  BLeaf();
  virtual ~BLeaf();

  BLeaf(const BLeaf& from);

  inline BLeaf& operator=(const BLeaf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BLeaf& default_instance();

  void Swap(BLeaf* other);

  // implements Message ----------------------------------------------

  BLeaf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BLeaf& from);
  void MergeFrom(const BLeaf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 parent_id = 2;
  inline bool has_parent_id() const;
  inline void clear_parent_id();
  static const int kParentIdFieldNumber = 2;
  inline ::google::protobuf::uint64 parent_id() const;
  inline void set_parent_id(::google::protobuf::uint64 value);

  // required uint64 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint64 level() const;
  inline void set_level(::google::protobuf::uint64 value);

  // repeated .btree.KV value = 4;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline const ::btree::KV& value(int index) const;
  inline ::btree::KV* mutable_value(int index);
  inline ::btree::KV* add_value();
  inline const ::google::protobuf::RepeatedPtrField< ::btree::KV >&
      value() const;
  inline ::google::protobuf::RepeatedPtrField< ::btree::KV >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:btree.BLeaf)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_parent_id();
  inline void clear_has_parent_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 parent_id_;
  ::google::protobuf::uint64 level_;
  ::google::protobuf::RepeatedPtrField< ::btree::KV > value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_btree_2eproto();
  friend void protobuf_AssignDesc_btree_2eproto();
  friend void protobuf_ShutdownFile_btree_2eproto();

  void InitAsDefaultInstance();
  static BLeaf* default_instance_;
};
// -------------------------------------------------------------------

class BBuffer : public ::google::protobuf::Message {
 public:
  BBuffer();
  virtual ~BBuffer();

  BBuffer(const BBuffer& from);

  inline BBuffer& operator=(const BBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BBuffer& default_instance();

  void Swap(BBuffer* other);

  // implements Message ----------------------------------------------

  BBuffer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BBuffer& from);
  void MergeFrom(const BBuffer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 parent_id = 2;
  inline bool has_parent_id() const;
  inline void clear_parent_id();
  static const int kParentIdFieldNumber = 2;
  inline ::google::protobuf::uint64 parent_id() const;
  inline void set_parent_id(::google::protobuf::uint64 value);

  // required uint64 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint64 level() const;
  inline void set_level(::google::protobuf::uint64 value);

  // repeated uint64 key = 4;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 4;
  inline ::google::protobuf::uint64 key(int index) const;
  inline void set_key(int index, ::google::protobuf::uint64 value);
  inline void add_key(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      key() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_key();

  // repeated uint64 child = 5;
  inline int child_size() const;
  inline void clear_child();
  static const int kChildFieldNumber = 5;
  inline ::google::protobuf::uint64 child(int index) const;
  inline void set_child(int index, ::google::protobuf::uint64 value);
  inline void add_child(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      child() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_child();

  // repeated .btree.KV pending = 6;
  inline int pending_size() const;
  inline void clear_pending();
  static const int kPendingFieldNumber = 6;
  inline const ::btree::KV& pending(int index) const;
  inline ::btree::KV* mutable_pending(int index);
  inline ::btree::KV* add_pending();
  inline const ::google::protobuf::RepeatedPtrField< ::btree::KV >&
      pending() const;
  inline ::google::protobuf::RepeatedPtrField< ::btree::KV >*
      mutable_pending();

  // @@protoc_insertion_point(class_scope:btree.BBuffer)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_parent_id();
  inline void clear_has_parent_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 parent_id_;
  ::google::protobuf::uint64 level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > key_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > child_;
  ::google::protobuf::RepeatedPtrField< ::btree::KV > pending_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_btree_2eproto();
  friend void protobuf_AssignDesc_btree_2eproto();
  friend void protobuf_ShutdownFile_btree_2eproto();

  void InitAsDefaultInstance();
  static BBuffer* default_instance_;
};
// ===================================================================


// ===================================================================

// KV

// required uint64 key = 1;
inline bool KV::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KV::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KV::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KV::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 KV::key() const {
  return key_;
}
inline void KV::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
}

// required uint64 value = 2;
inline bool KV::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KV::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KV::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KV::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 KV::value() const {
  return value_;
}
inline void KV::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BLeaf

// required uint64 id = 1;
inline bool BLeaf::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BLeaf::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BLeaf::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BLeaf::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BLeaf::id() const {
  return id_;
}
inline void BLeaf::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 parent_id = 2;
inline bool BLeaf::has_parent_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BLeaf::set_has_parent_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BLeaf::clear_has_parent_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BLeaf::clear_parent_id() {
  parent_id_ = GOOGLE_ULONGLONG(0);
  clear_has_parent_id();
}
inline ::google::protobuf::uint64 BLeaf::parent_id() const {
  return parent_id_;
}
inline void BLeaf::set_parent_id(::google::protobuf::uint64 value) {
  set_has_parent_id();
  parent_id_ = value;
}

// required uint64 level = 3;
inline bool BLeaf::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BLeaf::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BLeaf::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BLeaf::clear_level() {
  level_ = GOOGLE_ULONGLONG(0);
  clear_has_level();
}
inline ::google::protobuf::uint64 BLeaf::level() const {
  return level_;
}
inline void BLeaf::set_level(::google::protobuf::uint64 value) {
  set_has_level();
  level_ = value;
}

// repeated .btree.KV value = 4;
inline int BLeaf::value_size() const {
  return value_.size();
}
inline void BLeaf::clear_value() {
  value_.Clear();
}
inline const ::btree::KV& BLeaf::value(int index) const {
  return value_.Get(index);
}
inline ::btree::KV* BLeaf::mutable_value(int index) {
  return value_.Mutable(index);
}
inline ::btree::KV* BLeaf::add_value() {
  return value_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::btree::KV >&
BLeaf::value() const {
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::btree::KV >*
BLeaf::mutable_value() {
  return &value_;
}

// -------------------------------------------------------------------

// BBuffer

// required uint64 id = 1;
inline bool BBuffer::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BBuffer::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BBuffer::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BBuffer::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BBuffer::id() const {
  return id_;
}
inline void BBuffer::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 parent_id = 2;
inline bool BBuffer::has_parent_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BBuffer::set_has_parent_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BBuffer::clear_has_parent_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BBuffer::clear_parent_id() {
  parent_id_ = GOOGLE_ULONGLONG(0);
  clear_has_parent_id();
}
inline ::google::protobuf::uint64 BBuffer::parent_id() const {
  return parent_id_;
}
inline void BBuffer::set_parent_id(::google::protobuf::uint64 value) {
  set_has_parent_id();
  parent_id_ = value;
}

// required uint64 level = 3;
inline bool BBuffer::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BBuffer::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BBuffer::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BBuffer::clear_level() {
  level_ = GOOGLE_ULONGLONG(0);
  clear_has_level();
}
inline ::google::protobuf::uint64 BBuffer::level() const {
  return level_;
}
inline void BBuffer::set_level(::google::protobuf::uint64 value) {
  set_has_level();
  level_ = value;
}

// repeated uint64 key = 4;
inline int BBuffer::key_size() const {
  return key_.size();
}
inline void BBuffer::clear_key() {
  key_.Clear();
}
inline ::google::protobuf::uint64 BBuffer::key(int index) const {
  return key_.Get(index);
}
inline void BBuffer::set_key(int index, ::google::protobuf::uint64 value) {
  key_.Set(index, value);
}
inline void BBuffer::add_key(::google::protobuf::uint64 value) {
  key_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BBuffer::key() const {
  return key_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BBuffer::mutable_key() {
  return &key_;
}

// repeated uint64 child = 5;
inline int BBuffer::child_size() const {
  return child_.size();
}
inline void BBuffer::clear_child() {
  child_.Clear();
}
inline ::google::protobuf::uint64 BBuffer::child(int index) const {
  return child_.Get(index);
}
inline void BBuffer::set_child(int index, ::google::protobuf::uint64 value) {
  child_.Set(index, value);
}
inline void BBuffer::add_child(::google::protobuf::uint64 value) {
  child_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BBuffer::child() const {
  return child_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BBuffer::mutable_child() {
  return &child_;
}

// repeated .btree.KV pending = 6;
inline int BBuffer::pending_size() const {
  return pending_.size();
}
inline void BBuffer::clear_pending() {
  pending_.Clear();
}
inline const ::btree::KV& BBuffer::pending(int index) const {
  return pending_.Get(index);
}
inline ::btree::KV* BBuffer::mutable_pending(int index) {
  return pending_.Mutable(index);
}
inline ::btree::KV* BBuffer::add_pending() {
  return pending_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::btree::KV >&
BBuffer::pending() const {
  return pending_;
}
inline ::google::protobuf::RepeatedPtrField< ::btree::KV >*
BBuffer::mutable_pending() {
  return &pending_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace btree

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_btree_2eproto__INCLUDED
